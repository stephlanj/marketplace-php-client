<?php
/*
 * This file is part of the fnacMarketPlace APi Client.
 * (c) 2011 Fnac
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace FnacApiClient\Entity;

use Symfony\Component\Serializer\Normalizer\NormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizableInterface;

/**
 * PricingProduct definition.
 *
 * @author     Fnac
 * @version    1.0.0
 */

class PricingProduct extends Entity
{
    private $product_reference;
    private $product_name;
    private $image_url;
    private $pricings;

    /**
     * {@inheritDoc}
     */
    public function normalize(NormalizerInterface $normalizer, $format, $properties = null)
    {

    }

    /**
     * {@inheritDoc}
     */
    public function denormalize(NormalizerInterface $normalizer, $data, $format = null)
    {
        $this->product_reference = new ProductReference();
        $this->product_reference->denormalize($normalizer, $data['product_reference'], $format);
        $this->product_name = $data['product_name'];
        $this->image_url = $data['image_url'];

        $this->pricings = new \ArrayObject();

        if (isset($data['pricing'])) {
            if (isset($data['pricing'][0])) {
                foreach ($data['pricing'] as $pricing) {
                    $tmpObj = new Pricing();
                    $tmpObj->denormalize($normalizer, $pricing, $format);
                    $this->pricings[] = $tmpObj;
                }
            } elseif (!empty($data['pricing'])) {
                $tmpObj = new Pricing();
                $tmpObj->denormalize($normalizer, $data['pricing'], $format);
                $this->pricings[] = $tmpObj;
            }
        }
    }

    /**
     * Pricing product reference
     *
     * @see ProductReference
     *
     * @return string
     */
    public function getProductReference()
    {
        return $this->product_reference;
    }

    /**
     * Product's name
     *
     * @return string
     */
    public function getProductName()
    {
        return $this->product_name;
    }

    /**
     * Product image url
     *
     * @return string
     */
    public function getImageUrl()
    {
        return $this->image_url;
    }

    /**
     * Product pricing list
     *
     * @see Pricing
     *
     * @return ArrayObject<Pricing> The list of pricing for this product
     */
    public function getPricings()
    {
        return $this->pricings;
    }

}
